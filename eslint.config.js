const { FlatCompat } = require('@eslint/eslintrc')

const compat = new FlatCompat({
  baseDirectory: __dirname,
})

const eslintConfig = [
  // Global ignores - these apply to all configurations
  {
    ignores: [
      'node_modules/**',
      '.next/**',
      '.vercel/**',
      '.git/**',
      'dist/**',
      'build/**',
      'coverage/**',
      'public/**',
      '*.min.js',
      'next.config.ts', // Next.js config can have special patterns
      'next-env.d.ts', // Generated by Next.js
      'tailwind.config.ts', // Tailwind config can have special patterns
      'jest.config.ts', // Jest config can have special patterns
      'jest.setup.ts', // Jest setup can have special patterns
      'postcss.config.js', // PostCSS config usually minimal
      'prettier.config.js', // Prettier config usually minimal
      'sanity.config.ts', // Sanity config can have special patterns
      'sanity.cli.ts', // Sanity CLI config
      '__tests__/**/*.test.{js,ts,tsx}',
      '__tests__/**/testdata/**',
      '__tests__/**/mocks/**',
    ],
  },

  // Main configuration for TypeScript and JavaScript files
  ...compat
    .extends('next/core-web-vitals', 'next/typescript')
    .map((config) => ({
      ...config,
      files: [
        'src/**/*.{js,jsx,ts,tsx}',
        'app/**/*.{js,jsx,ts,tsx}',
        'pages/**/*.{js,jsx,ts,tsx}',
        'components/**/*.{js,jsx,ts,tsx}',
        'lib/**/*.{js,jsx,ts,tsx}',
        'utils/**/*.{js,jsx,ts,tsx}',
        'hooks/**/*.{js,jsx,ts,tsx}',
        'types/**/*.{js,jsx,ts,tsx}',
        'migrations/**/*.{js,ts}',
        'examples/**/*.{js,jsx,ts,tsx}',
        'eslint.config.js',
        '*.{js,jsx,ts,tsx}',
      ],
    })),

  {
    files: [
      'src/**/*.{js,jsx,ts,tsx}',
      'app/**/*.{js,jsx,ts,tsx}',
      'pages/**/*.{js,jsx,ts,tsx}',
      'components/**/*.{js,jsx,ts,tsx}',
      'lib/**/*.{js,jsx,ts,tsx}',
      'utils/**/*.{js,jsx,ts,tsx}',
      'hooks/**/*.{js,jsx,ts,tsx}',
      'types/**/*.{js,jsx,ts,tsx}',
      'migrations/**/*.{js,ts}',
      'examples/**/*.{js,jsx,ts,tsx}',
      'eslint.config.js',
    ],
    rules: {
      '@next/next/no-img-element': 'off',
    },
  },

  // Special rules for ESLint config file
  {
    files: ['eslint.config.js'],
    rules: {
      '@typescript-eslint/no-require-imports': 'off', // CommonJS required for compatibility
    },
  },

  // Special rules for migration files
  {
    files: ['migrations/**/*.{js,ts}'],
    rules: {
      '@typescript-eslint/no-unused-vars': [
        'error',
        { argsIgnorePattern: '^_|context' },
      ], // Allow unused context parameter
    },
  },
]

module.exports = eslintConfig
